import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

export type LanguageType = 'en' | 'zh';

interface LanguageContextProps {
    language: LanguageType;
    setLanguage: (language: LanguageType) => void;
    t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextProps | undefined>(undefined);

// 翻译字典
const translations = {
    en: {
        // Admin Sidebar
        'admin.sidebar.experiments': 'Experiments',
        'admin.sidebar.agents': 'Agents',
        'admin.sidebar.forms': 'Forms',
        'admin.sidebar.data': 'Data',
        'admin.sidebar.pylips': 'PyLips',
        'admin.sidebar.whisper': 'Whisper',
        'admin.sidebar.settings': 'Settings',
        'admin.sidebar.logout': 'Logout',
        
        // Admin Settings
        'admin.settings.title': 'System Settings',
        'admin.settings.systemInfo': 'System Information',
        'admin.settings.language': 'Language Settings',
        'admin.settings.languageDescription': 'Select the interface language for the admin panel',
        'admin.settings.currentLanguage': 'Current Language',
        'admin.settings.english': 'English',
        'admin.settings.chinese': 'Chinese (中文)',
        'admin.settings.changeLanguage': 'Change Language',
        
        // System Info
        'admin.systemInfo.pylipsIntegration': 'PyLips Integration: Enabled',
        'admin.systemInfo.ttsServices': 'TTS Services: System TTS + OpenAI',
        'admin.systemInfo.expressionControl': 'Real-time Expression Control: Available',
        'admin.systemInfo.whisperRecognition': 'Whisper Speech Recognition: Supported',
        
        // PyLips Panel
         'pylips.title': 'PyLips Digital Human Control Panel',
         'pylips.description': 'Manage PyLips digital human system configuration and real-time control.',
         'pylips.serviceStatus': 'Service Status',
         'pylips.refresh': 'Refresh',
         'pylips.ttsMethod': 'TTS Method',
         'pylips.voiceId': 'Voice ID',
         'pylips.default': 'Default',
         'pylips.startService': 'Start Service',
         'pylips.stopService': 'Stop Service',
         'pylips.config': 'Config',
         'pylips.speechTest': 'Speech Test',
         'pylips.testText': 'Test Text',
         'pylips.testTextPlaceholder': 'Enter text to test speech...',
         'pylips.playSpeech': 'Play Speech',
         'pylips.stopSpeech': 'Stop Speech',
         'pylips.expressionAndLookTest': 'Expression and Gaze Test',
         'pylips.expressionTest': 'Expression Test',
         'pylips.lookDirectionTest': 'Gaze Direction Test',
         'pylips.configTitle': 'PyLips Configuration',
         'pylips.systemTts': 'System TTS',
         'pylips.amazonPolly': 'Amazon Polly',
         'pylips.voiceIdPlaceholder': 'Leave empty to use default voice',
         'pylips.voiceIdHelper': 'Optional: Specify a specific voice ID',
         'pylips.selectVoice': 'Select Voice',
         'pylips.useManualVoiceId': 'Use Manual Voice ID',
         'pylips.defaultVoice': 'Default Voice',
         'pylips.applyConfig': 'Apply Config',
         'pylips.defaultTestText': 'Hello, I am LEXI digital human!',
         'pylips.status.unavailable': 'Service Unavailable',
         'pylips.status.running': 'Running',
         'pylips.status.starting': 'Starting',
         'pylips.status.stopped': 'Stopped',
         'pylips.expressions.happy': 'Happy',
         'pylips.expressions.sad': 'Sad',
         'pylips.expressions.surprised': 'Surprised',
         'pylips.expressions.angry': 'Angry',
         'pylips.expressions.neutral': 'Neutral',
         'pylips.directions.center': 'Center',
         'pylips.directions.left': 'Left',
         'pylips.directions.right': 'Right',
         'pylips.directions.up': 'Up',
         'pylips.directions.down': 'Down',
         'pylips.errors.getStatusFailed': 'Unable to get service status',
         'pylips.errors.startServiceFailed': 'Failed to start service',
         'pylips.errors.stopServiceFailed': 'Failed to stop service',
         'pylips.errors.speechTestFailed': 'Speech test failed',
         'pylips.errors.stopSpeechFailed': 'Failed to stop speech',
         'pylips.errors.expressionTestFailed': 'Expression test failed',
         'pylips.errors.lookTestFailed': 'Gaze test failed',
         'pylips.errors.updateConfigFailed': 'Failed to update configuration',
         'pylips.appearance': 'Appearance Settings',
         'pylips.appearanceTitle': 'Face Appearance Settings',
         'pylips.colors': 'Color Settings',
         'pylips.features': 'Feature Settings',
         'pylips.skinColor': 'Skin Color',
         'pylips.eyeColor': 'Eye Color',
         'pylips.hairColor': 'Hair Color',
         'pylips.faceShape': 'Face Shape',
         'pylips.eyeSize': 'Eye Size',
         'pylips.mouthSize': 'Mouth Size',
         'pylips.faceShapes.oval': 'Oval',
         'pylips.faceShapes.round': 'Round',
         'pylips.faceShapes.square': 'Square',
         'pylips.faceShapes.heart': 'Heart',
         'pylips.applyAppearance': 'Apply Appearance',
         'pylips.errors.updateAppearanceFailed': 'Failed to update appearance',
         'pylips.backgroundColor': 'Background Color',
         'pylips.eyeballColor': 'Eyeball Color',
         'pylips.irisColor': 'Iris Color',
         'pylips.mouthColor': 'Mouth Color',
         'pylips.browColor': 'Brow Color',
         'pylips.irisSize': 'Iris Size',
         'pylips.mouthWidth': 'Mouth Width',
         'pylips.browWidth': 'Brow Width',
         'pylips.browHeight': 'Brow Height',
         'pylips.noseWidth': 'Nose Width',
         'pylips.noseHeight': 'Nose Height',
         'pylips.noseVerticalPosition': 'Nose Vertical Position',
         'pylips.eyeShine': 'Eye Shine',
         'pylips.additionalColors': 'Additional Color Settings',
         'pylips.eyelidColor': 'Eyelid Color',
         'pylips.noseColor': 'Nose Color',
         'pylips.pupilColor': 'Pupil Color',
         'pylips.windowSettings': 'Window Settings',
         'pylips.windowWidth': 'Window Width',
         'pylips.windowHeight': 'Window Height',
         'pylips.borderRadius': 'Border Radius',
         'pylips.shadowIntensity': 'Shadow Intensity',
        
        // Whisper Panel
         'whisper.title': 'Whisper Speech Recognition Configuration',
         'whisper.description': 'Manage Whisper speech-to-text system configuration and model status.',
         'whisper.systemStatus': 'System Status',
         'whisper.refresh': 'Refresh',
         'whisper.systemReady': 'System Ready',
         'whisper.systemReadyDesc': 'Whisper speech recognition system is ready and can be used normally.',
         'whisper.systemNotReady': 'System Not Ready',
         'whisper.systemNotReadyDesc': 'Please check the following issues and complete the corresponding configuration.',
         'whisper.pythonEnvironment': 'Python Environment',
         'whisper.pythonConfigured': 'Python virtual environment configured',
         'whisper.pythonNotConfigured': 'Python virtual environment not found or misconfigured',
         'whisper.tempDirectory': 'Temp Directory',
         'whisper.tempDirWritable': 'Temp file directory writable',
         'whisper.tempDirNotWritable': 'Temp file directory not writable, please check permissions',
         'whisper.pythonAvailable': 'Python Available',
         'whisper.pythonAvailableDesc': 'Python environment installed and available',
         'whisper.pythonUnavailableDesc': 'Python environment unavailable or not properly configured',
         'whisper.tempDirWritableDesc': 'Temp directory writable, can store model files',
         'whisper.tempDirNotWritableDesc': 'Temp directory not writable, may affect model download',
         'whisper.available': 'Available',
         'whisper.unavailable': 'Unavailable',
         'whisper.tinyModel': 'Tiny Model',
         'whisper.smallModel': 'Small Model',
         'whisper.tinyModelDownloaded': 'Whisper Tiny model downloaded (~39MB)',
         'whisper.tinyModelNotDownloaded': 'Whisper Tiny model not downloaded',
         'whisper.smallModelDownloaded': 'Whisper Small model downloaded (~244MB)',
         'whisper.smallModelNotDownloaded': 'Whisper Small model not downloaded',
         'whisper.downloaded': 'Downloaded',
         'whisper.notDownloaded': 'Not Downloaded',
         'whisper.modelInfo': 'Model Information',
         'whisper.fileSize': 'File Size',
         'whisper.processingSpeed': 'Processing Speed',
         'whisper.accuracy': 'Accuracy',
         'whisper.useCase': 'Use Case',
         'whisper.veryFast': 'Very Fast',
         'whisper.fast': 'Fast',
         'whisper.average': 'Average',
         'whisper.high': 'High',
         'whisper.quickTranscription': 'Quick transcription, real-time processing',
         'whisper.balancedSpeedAccuracy': 'Balanced speed and accuracy',
         'whisper.installationInstructions': 'Installation Instructions',
         'whisper.manualConfigRequired': 'Manual Configuration Required',
         'whisper.followStepsToComplete': 'Please follow these steps to complete Whisper environment configuration:',
         'whisper.systemInfoRefreshed': 'System information refreshed',
         'whisper.failedToFetchSystemInfo': 'Failed to fetch system information',
         'whisper.experimentConfig.title': 'Experiment Configuration Management',
         'whisper.experimentConfig.description': 'Configure Whisper speech recognition for specific experiments',
         'whisper.experimentConfig.selectExperiment': 'Select Experiment',
         'whisper.experimentConfig.active': 'Active',
         'whisper.experimentConfig.enableWhisper': 'Enable Whisper Speech Recognition',
         'whisper.experimentConfig.modelSize': 'Model Size',
         'whisper.experimentConfig.tinyModel': 'Tiny (Fast)',
         'whisper.experimentConfig.smallModel': 'Small (Accurate)',
         'whisper.experimentConfig.language': 'Language',
         'whisper.experimentConfig.autoDetect': 'Auto Detect',
         'whisper.experimentConfig.chinese': 'Chinese',
         'whisper.experimentConfig.english': 'English',
         'whisper.experimentConfig.temperature': 'Temperature Parameter',
         'whisper.experimentConfig.temperatureHelp': 'Between 0-1, lower values produce more stable results',
         'whisper.experimentConfig.maxFileSize': 'Max File Size (MB)',
         'whisper.experimentConfig.maxDuration': 'Max Recording Duration (seconds)',
         'whisper.experimentConfig.saveConfig': 'Save Configuration',
         'whisper.experimentConfig.saving': 'Saving...',
         'whisper.experimentConfig.loadingConfig': 'Loading configuration...',
         'whisper.experimentConfig.fetchExperimentsFailed': 'Failed to fetch experiments list',
         'whisper.experimentConfig.configSavedSuccessfully': 'Configuration saved successfully',
         'whisper.experimentConfig.configSaveFailed': 'Failed to save configuration',
         'pylips.faceViewer.title': 'LEXI Digital Human',
         'pylips.faceViewer.hideFace': 'Hide Face',
         'pylips.faceViewer.showFace': 'Show Face',
         'pylips.faceViewer.refreshConnection': 'Refresh Connection',
         'pylips.faceViewer.mute': 'Mute',
         'pylips.faceViewer.unmute': 'Unmute',
         'pylips.faceViewer.connecting': 'Connecting...',
         'pylips.faceViewer.connected': 'Connected',
         'pylips.faceViewer.disconnected': 'Disconnected',
         'pylips.faceViewer.startFailed': 'Failed to start PyLips',
         'pylips.faceViewer.initFailed': 'Failed to initialize PyLips',
         'pylips.faceViewer.initializing': 'Initializing digital human...',
         'pylips.faceViewer.loadFailed': 'Unable to load digital human face',
         'pylips.faceViewer.clickToShow': 'Click the eye icon above to show digital human',
        
        // Experiments Panel
         'experiments.title': 'Experiments',
         'experiments.manager': 'Experiments Manager',
         'experiments.description': 'Manage your experiments, attach to them an agent, launch them, share with participants and more.',
         'experiments.addExperiment': 'Add Experiment',
         'experiments.editExperiment': 'Edit Experiment',
         'experiments.deleteExperiment': 'Delete Experiment',
         'experiments.experimentName': 'Experiment Name',
         'experiments.experimentDescription': 'Description',
         'experiments.status': 'Status',
         'experiments.active': 'Active',
         'experiments.inactive': 'Inactive',
         'experiments.participants': 'Participants',
         'experiments.createdAt': 'Created At',
         'experiments.actions': 'Actions',
         'experiments.noExperiments': 'No experiments found',
         'experiments.loadingExperiments': 'Loading experiments...',
         'experiments.saveChanges': 'Save Changes',
         'experiments.cancelChanges': 'Cancel Changes',
         'experiments.prev': 'prev',
         'experiments.next': 'next',
         'experiments.deleteConfirmation': 'Deleting the experiment will delete all experiment users and conversation. Are you sure you want to delete?',
         'experiments.deleteSuccess': 'Delete Experiment Success !',
         'experiments.deletingExperiment': 'Deleting Experiment...',
         'experiments.failedToDelete': 'Failed to Delete Experiment',
         'experiments.failedToLoad': 'Failed to load experiments',
         'experiments.failedToUpdateStatus': 'Failed to update experiments status',
         'experiments.updateSuccess': 'Experiment updated successfully',
         'experiments.updateError': 'Failed to update experiment',
        
        // Common
        'common.save': 'Save',
        'common.cancel': 'Cancel',
        'common.confirm': 'Confirm',
        'common.success': 'Success',
        'common.error': 'Error',
        'common.edit': 'Edit',
        'common.delete': 'Delete',
        'common.add': 'Add',
        'common.loading': 'Loading...',
    },
    zh: {
        // Admin Sidebar
        'admin.sidebar.experiments': '实验',
        'admin.sidebar.agents': '代理',
        'admin.sidebar.forms': '表单',
        'admin.sidebar.data': '数据',
        'admin.sidebar.pylips': 'PyLips',
        'admin.sidebar.whisper': 'Whisper',
        'admin.sidebar.settings': '设置',
        'admin.sidebar.logout': '退出登录',
        
        // Admin Settings
        'admin.settings.title': '系统设置',
        'admin.settings.systemInfo': '系统信息',
        'admin.settings.language': '语言设置',
        'admin.settings.languageDescription': '选择管理面板的界面语言',
        'admin.settings.currentLanguage': '当前语言',
        'admin.settings.english': 'English',
        'admin.settings.chinese': '中文',
        'admin.settings.changeLanguage': '更改语言',
        
        // System Info
        'admin.systemInfo.pylipsIntegration': 'PyLips 集成：已启用',
        'admin.systemInfo.ttsServices': 'TTS 服务：系统 TTS + OpenAI',
        'admin.systemInfo.expressionControl': '实时表情控制：可用',
        'admin.systemInfo.whisperRecognition': 'Whisper 语音识别：支持',
        
        // PyLips Panel
         'pylips.title': 'PyLips 数字人控制面板',
         'pylips.description': '管理 PyLips 数字人系统配置和实时控制。',
         'pylips.serviceStatus': '服务状态',
         'pylips.refresh': '刷新',
         'pylips.ttsMethod': 'TTS方法',
         'pylips.voiceId': '语音ID',
         'pylips.default': '默认',
         'pylips.startService': '启动服务',
         'pylips.stopService': '停止服务',
         'pylips.config': '配置',
         'pylips.speechTest': '语音测试',
         'pylips.testText': '测试文本',
         'pylips.testTextPlaceholder': '输入要测试的语音文本...',
         'pylips.playSpeech': '播放语音',
         'pylips.stopSpeech': '停止语音',
         'pylips.expressionAndLookTest': '表情和注视测试',
         'pylips.expressionTest': '表情测试',
         'pylips.lookDirectionTest': '注视方向测试',
         'pylips.configTitle': 'PyLips 配置',
         'pylips.systemTts': '系统TTS',
         'pylips.amazonPolly': 'Amazon Polly',
         'pylips.voiceIdPlaceholder': '留空使用默认语音',
         'pylips.voiceIdHelper': '可选：指定特定的语音ID',
         'pylips.voiceSelection': '语音选择',
         'pylips.selectVoice': '选择语音包',
         'pylips.useManualVoiceId': '使用自定义语音ID',
         'pylips.loadingVoices': '正在加载语音包...',
         'pylips.noVoicesAvailable': '暂无可用语音包',
         'pylips.defaultVoice': '默认语音',
         'pylips.applyConfig': '应用配置',
         'pylips.defaultTestText': '你好，我是LEXI数字人！',
         'pylips.status.unavailable': '服务不可用',
         'pylips.status.running': '运行中',
         'pylips.status.starting': '启动中',
         'pylips.status.stopped': '已停止',
         'pylips.expressions.happy': '开心',
         'pylips.expressions.sad': '悲伤',
         'pylips.expressions.surprised': '惊讶',
         'pylips.expressions.angry': '愤怒',
         'pylips.expressions.neutral': '中性',
         'pylips.directions.center': '中央',
         'pylips.directions.left': '左',
         'pylips.directions.right': '右',
         'pylips.directions.up': '上',
         'pylips.directions.down': '下',
         'pylips.errors.getStatusFailed': '无法获取服务状态',
         'pylips.errors.startServiceFailed': '启动服务失败',
         'pylips.errors.stopServiceFailed': '停止服务失败',
         'pylips.errors.speechTestFailed': '语音测试失败',
         'pylips.errors.stopSpeechFailed': '停止语音失败',
         'pylips.errors.expressionTestFailed': '表情测试失败',
         'pylips.errors.lookTestFailed': '注视测试失败',
         'pylips.errors.updateConfigFailed': '更新配置失败',
         'pylips.appearance': '外观设置',
         'pylips.appearanceTitle': '面孔外观设置',
         'pylips.colors': '颜色设置',
         'pylips.features': '特征设置',
         'pylips.skinColor': '肤色',
         'pylips.eyeColor': '眼睛颜色',
         'pylips.hairColor': '头发颜色',
         'pylips.faceShape': '脸型',
         'pylips.eyeSize': '眼睛大小',
         'pylips.mouthSize': '嘴巴大小',
         'pylips.faceShapes.oval': '椭圆形',
         'pylips.faceShapes.round': '圆形',
         'pylips.faceShapes.square': '方形',
         'pylips.faceShapes.heart': '心形',
         'pylips.applyAppearance': '应用外观',
         'pylips.errors.updateAppearanceFailed': '更新外观失败',
         'pylips.backgroundColor': '背景颜色',
         'pylips.eyeballColor': '眼球颜色',
         'pylips.irisColor': '虹膜颜色',
         'pylips.mouthColor': '嘴巴颜色',
         'pylips.browColor': '眉毛颜色',
         'pylips.irisSize': '虹膜大小',
         'pylips.mouthWidth': '嘴巴宽度',
         'pylips.browWidth': '眉毛宽度',
         'pylips.browHeight': '眉毛高度',
         'pylips.noseWidth': '鼻子宽度',
         'pylips.noseHeight': '鼻子高度',
         'pylips.noseVerticalPosition': '鼻子垂直位置',
         'pylips.eyeShine': '眼睛光泽',
         'pylips.additionalColors': '额外颜色设置',
         'pylips.eyelidColor': '眼睑颜色',
         'pylips.noseColor': '鼻子颜色',
         'pylips.pupilColor': '瞳孔颜色',
         'pylips.windowSettings': '窗口设置',
         'pylips.windowWidth': '窗口宽度',
         'pylips.windowHeight': '窗口高度',
         'pylips.borderRadius': '边框圆角',
         'pylips.shadowIntensity': '阴影强度',
        
        // Whisper Panel
         'whisper.title': 'Whisper 语音识别配置',
         'whisper.description': '管理 Whisper 语音转文字功能的系统配置和模型状态。',
         'whisper.systemStatus': '系统状态',
         'whisper.refresh': '刷新',
         'whisper.systemReady': '系统就绪',
         'whisper.systemReadyDesc': 'Whisper 语音识别系统已准备就绪，可以正常使用。',
         'whisper.systemNotReady': '系统未就绪',
         'whisper.systemNotReadyDesc': '请检查以下问题并完成相应配置。',
         'whisper.pythonEnvironment': 'Python 环境',
         'whisper.pythonConfigured': 'Python 虚拟环境已配置',
         'whisper.pythonNotConfigured': 'Python 虚拟环境未找到或配置错误',
         'whisper.tempDirectory': '临时目录',
         'whisper.tempDirWritable': '临时文件目录可写',
         'whisper.tempDirNotWritable': '临时文件目录不可写，请检查权限',
         'whisper.pythonAvailable': 'Python 可用性',
         'whisper.pythonAvailableDesc': 'Python 环境已安装并可用',
         'whisper.pythonUnavailableDesc': 'Python 环境不可用或未正确配置',
         'whisper.tempDirWritableDesc': '临时目录可写，可以存储模型文件',
         'whisper.tempDirNotWritableDesc': '临时目录不可写，可能影响模型下载',
         'whisper.available': '可用',
         'whisper.unavailable': '不可用',
         'whisper.tinyModel': 'Tiny 模型',
         'whisper.smallModel': 'Small 模型',
         'whisper.tinyModelDownloaded': 'Whisper Tiny 模型已下载 (~39MB)',
         'whisper.tinyModelNotDownloaded': 'Whisper Tiny 模型未下载',
         'whisper.smallModelDownloaded': 'Whisper Small 模型已下载 (~244MB)',
         'whisper.smallModelNotDownloaded': 'Whisper Small 模型未下载',
         'whisper.downloaded': '已下载',
         'whisper.notDownloaded': '未下载',
         'whisper.modelInfo': '模型信息',
         'whisper.fileSize': '文件大小',
         'whisper.processingSpeed': '处理速度',
         'whisper.accuracy': '准确率',
         'whisper.useCase': '适用场景',
         'whisper.veryFast': '非常快',
         'whisper.fast': '较快',
         'whisper.average': '一般',
         'whisper.high': '较高',
         'whisper.quickTranscription': '快速转录、实时处理',
         'whisper.balancedSpeedAccuracy': '平衡速度和准确率',
         'whisper.installationInstructions': '安装说明',
         'whisper.manualConfigRequired': '需要手动配置',
         'whisper.followStepsToComplete': '请按照以下步骤完成 Whisper 环境配置：',
         'whisper.systemInfoRefreshed': '系统信息已刷新',
         'whisper.failedToFetchSystemInfo': '获取系统信息失败',
         'whisper.experimentConfig.title': '实验配置管理',
         'whisper.experimentConfig.description': '为特定实验配置 Whisper 语音识别',
         'whisper.experimentConfig.selectExperiment': '选择实验',
         'whisper.experimentConfig.active': '活跃',
         'whisper.experimentConfig.enableWhisper': '启用 Whisper 语音识别',
         'whisper.experimentConfig.modelSize': '模型大小',
         'whisper.experimentConfig.tinyModel': 'Tiny (快速)',
         'whisper.experimentConfig.smallModel': 'Small (准确)',
         'whisper.experimentConfig.language': '语言',
         'whisper.experimentConfig.autoDetect': '自动检测',
         'whisper.experimentConfig.chinese': '中文',
         'whisper.experimentConfig.english': '英文',
         'whisper.experimentConfig.temperature': '温度参数',
         'whisper.experimentConfig.temperatureHelp': '0-1之间，较低的值产生更稳定的结果',
         'whisper.experimentConfig.maxFileSize': '最大文件大小 (MB)',
         'whisper.experimentConfig.maxDuration': '最大录音时长 (秒)',
         'whisper.experimentConfig.saveConfig': '保存配置',
         'whisper.experimentConfig.saving': '保存中...',
         'whisper.experimentConfig.loadingConfig': '加载配置中...',
         'whisper.experimentConfig.fetchExperimentsFailed': '获取实验列表失败',
         'whisper.experimentConfig.configSavedSuccessfully': '配置保存成功',
         'whisper.experimentConfig.configSaveFailed': '保存配置失败',
         'pylips.faceViewer.title': 'LEXI 数字人',
         'pylips.faceViewer.hideFace': '隐藏面部',
         'pylips.faceViewer.showFace': '显示面部',
         'pylips.faceViewer.refreshConnection': '刷新连接',
         'pylips.faceViewer.mute': '静音',
         'pylips.faceViewer.unmute': '取消静音',
         'pylips.faceViewer.connecting': '连接中...',
         'pylips.faceViewer.connected': '已连接',
         'pylips.faceViewer.disconnected': '已断开',
         'pylips.faceViewer.startFailed': '启动 PyLips 失败',
         'pylips.faceViewer.initFailed': '初始化 PyLips 失败',
         'pylips.faceViewer.initializing': '正在初始化数字人...',
         'pylips.faceViewer.loadFailed': '无法加载数字人面部',
         'pylips.faceViewer.clickToShow': '点击上方眼睛图标显示数字人',
        
        // Experiments Panel
         'experiments.title': '实验',
         'experiments.manager': '实验管理器',
         'experiments.description': '管理您的实验，为其分配智能体，启动实验，与参与者分享等。',
         'experiments.addExperiment': '添加实验',
         'experiments.editExperiment': '编辑实验',
         'experiments.deleteExperiment': '删除实验',
         'experiments.experimentName': '实验名称',
         'experiments.experimentDescription': '描述',
         'experiments.status': '状态',
         'experiments.active': '活跃',
         'experiments.inactive': '非活跃',
         'experiments.participants': '参与者',
         'experiments.createdAt': '创建时间',
         'experiments.actions': '操作',
         'experiments.noExperiments': '未找到实验',
         'experiments.loadingExperiments': '加载实验中...',
         'experiments.saveChanges': '保存更改',
         'experiments.cancelChanges': '取消更改',
         'experiments.prev': '上一页',
         'experiments.next': '下一页',
         'experiments.deleteConfirmation': '删除实验将删除所有实验用户和对话。您确定要删除吗？',
         'experiments.deleteSuccess': '删除实验成功！',
         'experiments.deletingExperiment': '正在删除实验...',
         'experiments.failedToDelete': '删除实验失败',
         'experiments.failedToLoad': '加载实验失败',
         'experiments.failedToUpdateStatus': '更新实验状态失败',
         'experiments.updateSuccess': '实验更新成功',
         'experiments.updateError': '更新实验失败',
        
        // Common
        'common.save': '保存',
        'common.cancel': '取消',
        'common.confirm': '确认',
        'common.success': '成功',
        'common.error': '错误',
        'common.edit': '编辑',
        'common.delete': '删除',
        'common.add': '添加',
        'common.loading': '加载中...',
    },
};

interface LanguageProviderProps {
    children: ReactNode;
}

export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
    const [language, setLanguageState] = useState<LanguageType>('en');

    // 从 localStorage 加载语言设置
    useEffect(() => {
        const savedLanguage = localStorage.getItem('adminLanguage') as LanguageType;
        if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'zh')) {
            setLanguageState(savedLanguage);
        }
    }, []);

    // 设置语言并保存到 localStorage
    const setLanguage = (newLanguage: LanguageType) => {
        setLanguageState(newLanguage);
        localStorage.setItem('adminLanguage', newLanguage);
    };

    // 翻译函数
    const t = (key: string): string => {
        return translations[language][key] || key;
    };

    return (
        <LanguageContext.Provider value={{ language, setLanguage, t }}>
            {children}
        </LanguageContext.Provider>
    );
};

export const useLanguage = () => {
    const context = useContext(LanguageContext);
    if (!context) {
        throw new Error('useLanguage must be used within a LanguageProvider');
    }
    return context;
};